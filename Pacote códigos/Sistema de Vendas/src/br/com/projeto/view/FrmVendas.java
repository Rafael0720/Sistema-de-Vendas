/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projeto.view;

import br.com.projeto.dao.ClientesDao;
import br.com.projeto.dao.ContasRecDao;
import br.com.projeto.dao.ItensVendasDao;
import br.com.projeto.dao.PlanosDao;
import br.com.projeto.dao.ProdutosDao;
import br.com.projeto.dao.VendasDao;
import br.com.projeto.dao.VendasNoCartaoDao;
import br.com.projeto.model.Clientes;
import br.com.projeto.model.ContasRec;
import br.com.projeto.model.ItensVendas;
import br.com.projeto.model.Planos;
import br.com.projeto.model.Produtos;
import br.com.projeto.model.Situacao;
import br.com.projeto.model.Utilitarios;
import br.com.projeto.model.Vendas;
import br.com.projeto.model.VendasNoCartao;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rafael Godoy
 */
public class FrmVendas extends javax.swing.JFrame {

    // abre uma nova tela, sem que a tela atual seja fechada, podendo assim trocar informções entre elas.
    FrmPlanosFiltro PlanFil = new FrmPlanosFiltro();
    FrmClientesFiltro CliFil = new FrmClientesFiltro();
    FrmProdutosFiltro ProFil = new FrmProdutosFiltro();
    FrmSituacaoFiltro SitFil = new FrmSituacaoFiltro();
    FrmVendasFiltro VendFil = new FrmVendasFiltro();
    FrmVendasBaixar BaixFil = new FrmVendasBaixar();

    DefaultTableModel dados;

    String botao = null; // variável para guardar se um cadastro está sendo criado/editado.

    String situacao = ""; // variável usada para especificar o status atual da venda A Vista / A Prazo. 
    String situacaoAnterior = ""; // variável usada para comparar se uma venda mudou de situação.
    int dias; //serve para contar os dias que será o próximo vencimento
    boolean alterar = true; // será usado pra confirmar se a requisição já foi paga.     

    DecimalFormat decimal = new DecimalFormat("#,##0.00"); // considera apenas as duas casas decimais

    double total = 0;
    double preco = 0;
    int quantidade = 0;
    double subTotal = 0;

    public FrmVendas() {
        initComponents();

        Utilitarios util = new Utilitarios();
        util.inserirIcone(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        botoes = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnFiltrar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnBaixar = new javax.swing.JButton();
        venda = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtIdCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtIdSituacao = new javax.swing.JTextField();
        txtSituacao = new javax.swing.JTextField();
        txtEmissao = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        tb_ItensVencimentos = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        produto = new javax.swing.JPanel();
        txtNomeProduto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtIdProduto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtQtd = new javax.swing.JTextField();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_contas = new javax.swing.JTable();
        parcelas = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtIdParcelas = new javax.swing.JTextField();
        txtParcelas = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservacoes = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_Itens = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela de Vendas");
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(173, 198, 242));
        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Requisição de Vendas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(417, 417, 417)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        botoes.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        botoes.setPreferredSize(new java.awt.Dimension(850, 65));

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/novo.png"))); // NOI18N
        btnNovo.setToolTipText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnFiltrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/filtro.png"))); // NOI18N
        btnFiltrar.setToolTipText("Filtrar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/editar.png"))); // NOI18N
        btnEditar.setToolTipText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/apagar.png"))); // NOI18N
        btnApagar.setToolTipText("Apagar");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/sair.png"))); // NOI18N
        btnSair.setToolTipText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/salvar.png"))); // NOI18N
        btnSalvar.setToolTipText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cancelar.png"))); // NOI18N
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnBaixar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/baixar.png"))); // NOI18N
        btnBaixar.setToolTipText("Baixar");
        btnBaixar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaixarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botoesLayout = new javax.swing.GroupLayout(botoes);
        botoes.setLayout(botoesLayout);
        botoesLayout.setHorizontalGroup(
            botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botoesLayout.createSequentialGroup()
                .addComponent(btnFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBaixar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        botoesLayout.setVerticalGroup(
            botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnFiltrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(botoesLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(botoesLayout.createSequentialGroup()
                .addGroup(botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBaixar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        venda.setBackground(new java.awt.Color(255, 255, 255));
        venda.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da Venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Cliente:");

        txtNomeCliente.setEditable(false);
        txtNomeCliente.setBackground(new java.awt.Color(255, 255, 255));
        txtNomeCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Req.:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Emissão:");

        txtId.setEditable(false);
        txtId.setBackground(new java.awt.Color(255, 255, 255));
        txtId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtIdCliente.setEditable(false);
        txtIdCliente.setBackground(new java.awt.Color(255, 255, 255));
        txtIdCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtIdCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIdClienteMouseClicked(evt);
            }
        });
        txtIdCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdClienteKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Situacao:");

        txtIdSituacao.setEditable(false);
        txtIdSituacao.setBackground(new java.awt.Color(255, 255, 255));
        txtIdSituacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtIdSituacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIdSituacaoMouseClicked(evt);
            }
        });

        txtSituacao.setEditable(false);
        txtSituacao.setBackground(new java.awt.Color(255, 255, 255));
        txtSituacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtEmissao.setBackground(new java.awt.Color(255, 255, 255));
        txtEmissao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Nome:");

        javax.swing.GroupLayout vendaLayout = new javax.swing.GroupLayout(venda);
        venda.setLayout(vendaLayout);
        vendaLayout.setHorizontalGroup(
            vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vendaLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(vendaLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(vendaLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeCliente))))
        );
        vendaLayout.setVerticalGroup(
            vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(txtIdSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tb_ItensVencimentos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        produto.setBackground(new java.awt.Color(255, 255, 255));
        produto.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtNomeProduto.setEditable(false);
        txtNomeProduto.setBackground(new java.awt.Color(255, 255, 255));
        txtNomeProduto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Produto:");

        txtIdProduto.setEditable(false);
        txtIdProduto.setBackground(new java.awt.Color(255, 255, 255));
        txtIdProduto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtIdProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIdProdutoMouseClicked(evt);
            }
        });
        txtIdProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdProdutoKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Preço:");

        txtPreco.setEditable(false);
        txtPreco.setBackground(new java.awt.Color(255, 255, 255));
        txtPreco.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Qtd:");

        txtQtd.setEditable(false);
        txtQtd.setBackground(new java.awt.Color(255, 255, 255));
        txtQtd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnAdicionar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdicionar.setText("Adicionar Item");
        btnAdicionar.setEnabled(false);
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemover.setText("Remover Item");
        btnRemover.setEnabled(false);
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout produtoLayout = new javax.swing.GroupLayout(produto);
        produto.setLayout(produtoLayout);
        produtoLayout.setHorizontalGroup(
            produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(produtoLayout.createSequentialGroup()
                .addGroup(produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(produtoLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(produtoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, produtoLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addGroup(produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        produtoLayout.setVerticalGroup(
            produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(produtoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(produtoLayout.createSequentialGroup()
                        .addGroup(produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(produtoLayout.createSequentialGroup()
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(produto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(produto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        tb_ItensVencimentos.addTab("Itens", jPanel2);

        tb_contas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tb_contas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Parc.", "Emissão", "Vencimento", "Pagamento", "Valor", "Liq/Rec"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_contas.setRowHeight(20);
        jScrollPane3.setViewportView(tb_contas);
        if (tb_contas.getColumnModel().getColumnCount() > 0) {
            tb_contas.getColumnModel().getColumn(0).setPreferredWidth(50);
            tb_contas.getColumnModel().getColumn(1).setPreferredWidth(50);
            tb_contas.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        parcelas.setBackground(new java.awt.Color(255, 255, 255));
        parcelas.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Parcelas:");

        txtIdParcelas.setEditable(false);
        txtIdParcelas.setBackground(new java.awt.Color(255, 255, 255));
        txtIdParcelas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtIdParcelas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdParcelasFocusLost(evt);
            }
        });
        txtIdParcelas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdParcelasKeyPressed(evt);
            }
        });

        txtParcelas.setEditable(false);
        txtParcelas.setBackground(new java.awt.Color(255, 255, 255));
        txtParcelas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout parcelasLayout = new javax.swing.GroupLayout(parcelas);
        parcelas.setLayout(parcelasLayout);
        parcelasLayout.setHorizontalGroup(
            parcelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parcelasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIdParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        parcelasLayout.setVerticalGroup(
            parcelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parcelasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parcelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parcelas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(parcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
        );

        tb_ItensVencimentos.addTab("Vencimentos", jPanel3);

        tb_ItensVencimentos.setSelectedIndex(1);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observações", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        txtObservacoes.setEditable(false);
        txtObservacoes.setColumns(20);
        txtObservacoes.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txtObservacoes.setRows(5);
        jScrollPane2.setViewportView(txtObservacoes);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Produto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        tb_Itens.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tb_Itens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Produto", "Preço", "Qtd", "SubTotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_Itens.setRowHeight(20);
        jScrollPane1.setViewportView(tb_Itens);
        if (tb_Itens.getColumnModel().getColumnCount() > 0) {
            tb_Itens.getColumnModel().getColumn(0).setPreferredWidth(20);
            tb_Itens.getColumnModel().getColumn(1).setPreferredWidth(150);
            tb_Itens.getColumnModel().getColumn(2).setPreferredWidth(50);
            tb_Itens.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total da Venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Total da Venda:");
        jLabel8.setMaximumSize(new java.awt.Dimension(126, 18));
        jLabel8.setMinimumSize(new java.awt.Dimension(126, 18));

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(255, 255, 255));
        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(227, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(botoes, javax.swing.GroupLayout.DEFAULT_SIZE, 1104, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tb_ItensVencimentos, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(venda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(venda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(tb_ItensVencimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated


    }//GEN-LAST:event_formWindowActivated

    private void txtIdProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdProdutoKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            situacao = txtSituacao.getText();

            // filtra os dados do produto escolhido. Buscando o valor de acordo com a situação, A Vista ou A Prazo.
            if (situacao.equals("A Vista") || situacao.equals("A Prazo")) {

                int id = Integer.parseInt(txtIdProduto.getText());
                ProdutosDao daoProd = new ProdutosDao();
                Produtos objProd = new Produtos();
                objProd = daoProd.consultarPorId(id);
                txtNomeProduto.setText(objProd.getNome());

                if (situacao.equals("A Vista")) {
                    txtPreco.setText(String.valueOf(decimal.format(objProd.getValor_vista())));
                } else if (situacao.equals("A Prazo")) {
                    txtPreco.setText(String.valueOf(decimal.format(objProd.getValor_venda())));
                }
                txtQtd.requestFocus();
                txtQtd.selectAll();
            } else {
                JOptionPane.showMessageDialog(null, "Escolha a forma de pagamento: A Vista ou A Prazo!");
            }

        }

    }//GEN-LAST:event_txtIdProdutoKeyPressed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed

        try {
            // adiciona o item escolhido na tabela de itens.
            preco = Double.parseDouble(txtPreco.getText().replace(".", "").replace(",", "."));
            quantidade = Integer.parseInt(txtQtd.getText());
            subTotal = preco * quantidade;
            total += subTotal;
            txtTotal.setText(String.valueOf(decimal.format(total)));
            dados = (DefaultTableModel) tb_Itens.getModel();
            String precoStr = String.valueOf(decimal.format(preco));
            String subTotalStr = String.valueOf(decimal.format(subTotal));
            dados.addRow(new Object[]{
                txtIdProduto.getText(),
                txtNomeProduto.getText(),
                precoStr,
                quantidade,
                subTotalStr
            });

            //atualiza a tabela de contas
            DefaultTableModel tabela_contas = (DefaultTableModel) tb_contas.getModel();
            tabela_contas.setNumRows(0);

            String id = txtId.getText();
            String idFin;

            int parcelas = Integer.parseInt(txtIdParcelas.getText());
            int contParc = 0;
            String parcelaStr;

            Date emissao = txtEmissao.getDate();
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            String emissaoFor = formato.format(emissao);
            Calendar c = Calendar.getInstance();
            c.setTime(emissao);

            Date vencimento;
            String vencimentoFor;

            double valorParcela = (Double.parseDouble(txtTotal.getText().replace(".", "").replace(",", ".")) / parcelas);
            String valorParcelaStr = String.valueOf(decimal.format(valorParcela));
            String LiqRec = "Rec";

            for (int i = 0; i < parcelas; i++) {
                contParc += 1;
                idFin = id + "-" + contParc;

                c.add(Calendar.DATE, +dias);
                vencimento = c.getTime();
                vencimentoFor = formato.format(vencimento);

                parcelaStr = "(" + contParc + "-" + parcelas + ")";

                tabela_contas.addRow(new Object[]{
                    idFin,
                    parcelaStr,
                    emissaoFor,
                    vencimentoFor,
                    "",
                    valorParcelaStr,
                    LiqRec
                });
            }
            new Utilitarios().limpaTela_Apenas(produto);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Faltou preencher algum dado!");
        }


    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed

        if (botao == "novo" || botao == "editar") {
            JOptionPane.showMessageDialog(null, "Há um arquivo aberto. Cancele ou Salve ele antes de "
                    + "realizar essa operação!");
        } else {
            botao = "novo";
            btnNovo.setSelected(true);

            new Utilitarios().limpaTela_Habilita(venda);
            new Utilitarios().limpaTela_Habilita(produto);
            new Utilitarios().limpaTela_Habilita(parcelas);

            //o insert vai aqui, pra pegar o número correto da requisição, que será usado nas parcelas.
            VendasDao dao = new VendasDao();
            Vendas obj = new Vendas();
            dao.inserir(obj);
            int id = dao.ultimoCadastro();
            txtId.setText(String.valueOf(id));

            Date data = new Date(); // pega a data do sistema
            txtEmissao.setDate(data);

            txtId.setEditable(false);
            txtSituacao.setEditable(false);
            txtObservacoes.setEditable(true);
            txtNomeCliente.setEditable(false);
            txtNomeProduto.setEditable(false);
            txtPreco.setEditable(false);
            txtParcelas.setEditable(false);

            txtObservacoes.setText("");
            txtTotal.setText("");

            dados = (DefaultTableModel) tb_Itens.getModel();
            dados.setNumRows(0);
            total = 0;
            situacao = "";
            situacaoAnterior = "";
            btnAdicionar.setEnabled(true);
            btnRemover.setEnabled(true);

            DefaultTableModel tabela_contas = (DefaultTableModel) tb_contas.getModel();
            tabela_contas.setNumRows(0);
        }


    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed

        if (botao == "novo" || botao == "editar") {
            JOptionPane.showMessageDialog(null, "Há um arquivo aberto. Cancele ou Salve ele antes de "
                    + "realizar essa operação!");
        } else {
            VendFil.mostrarTela(this);
            DefaultTableModel tb_filtro = (DefaultTableModel) VendFil.tb_Vendas.getModel();
            tb_filtro.setNumRows(0);
        }

    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        String validacao = txtId.getText();

        if (botao == "novo" || botao == "editar") {
            JOptionPane.showMessageDialog(null, "Há um arquivo aberto. Cancele ou Salve ele antes de "
                    + "realizar essa operação!");
        } else if (botao == null && validacao.equals("")) {
            JOptionPane.showMessageDialog(null, "Não há nenhum arquivo para ser alterado!");
        } else {

            DefaultTableModel tbl_contas = (DefaultTableModel) tb_contas.getModel();

            // verifica se alguma parcela já foi paga, caso tenha sido, o sitema não deixa editar a venda.
            for (int i = 0; i < tbl_contas.getRowCount(); i++) {
                String verificacao = tbl_contas.getValueAt(i, 6).toString();
                if (verificacao.equals("Liq")) {
                    alterar = false;
                }
            }

            if (alterar == false) {
                JOptionPane.showMessageDialog(null, "Toda ou Parte dessa requisição já foi paga. Portanto, ela não pode ser alterada!");
                alterar = true;
            } else {
                botao = "editar";
                btnEditar.setSelected(true);

                new Utilitarios().Habilita_Apenas(venda);
                new Utilitarios().Habilita_Apenas(produto);
                new Utilitarios().Habilita_Apenas(parcelas);

                txtId.setEditable(false);
                txtSituacao.setEditable(false);
                txtNomeCliente.setEditable(false);
                txtNomeProduto.setEditable(false);
                txtPreco.setEditable(false);
                txtParcelas.setEditable(false);
                txtObservacoes.setEditable(true);
                btnAdicionar.setEnabled(true);
                btnRemover.setEnabled(true);
            }
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed

        if (botao == "novo" || botao == "editar") {
            JOptionPane.showMessageDialog(null, "Há um arquivo aberto. Cancele ou Salve ele antes de "
                    + "realizar essa operação!");
        } else {

            String validacao = txtId.getText();

            if (validacao.equals("")) {
                JOptionPane.showMessageDialog(null, "Não há nenhum arquivo para ser apagado!");
            } else {
                int id_venda = Integer.parseInt(txtId.getText());
                DefaultTableModel tbl_contas = (DefaultTableModel) tb_contas.getModel();

                // verifica se alguma parcela já foi paga, caso tenha sido, o sitema não deixa apagar a venda.
                for (int i = 0; i < tbl_contas.getRowCount(); i++) {
                    String verificacao = tbl_contas.getValueAt(i, 6).toString();
                    if (verificacao.equals("Liq")) {
                        alterar = false;
                    }
                }

                if (alterar == false) {
                    JOptionPane.showMessageDialog(null, "Toda ou Parte dessa requisição já foi paga. Portanto, ela não pode ser apagada!");
                    alterar = true;
                } else {
                    //nessa parte é atualizado o estoque dos itens que serão deletados.
                    dados = (DefaultTableModel) tb_Itens.getModel();

                    for (int i = 0; i < dados.getRowCount(); i++) {

                        int qtd_estoque, qtd_devolvida, qtd_atualizada;

                        ProdutosDao daoPro = new ProdutosDao();
                        Produtos objPro = new Produtos();

                        objPro.setId(Integer.parseInt(dados.getValueAt(i, 0).toString()));

                        qtd_estoque = daoPro.retornaEstoque(objPro.getId());
                        qtd_devolvida = Integer.parseInt(dados.getValueAt(i, 3).toString());
                        qtd_atualizada = qtd_estoque + qtd_devolvida;
                        daoPro.AtualizaEstoque(objPro.getId(), qtd_atualizada);

                    }
                    dados.setNumRows(0);

                    //nessa parte é deletado todos os itens da requisição.
                    ItensVendasDao daoItem = new ItensVendasDao();
                    ItensVendas objItem = new ItensVendas();

                    daoItem.excluir(id_venda);

                    //nessa parte é deletado a requisição.
                    VendasDao dao = new VendasDao();
                    dao.excluir(id_venda);

                    //nessa parte é deletado as parcelas e limpo a tabela de contas.
                    ContasRecDao daoCon = new ContasRecDao();
                    daoCon.excluirDaRequisicao(id_venda);

                    DefaultTableModel tabela_contas = (DefaultTableModel) tb_contas.getModel();
                    tabela_contas.setNumRows(0);

                    // nessa parte organiza o form.
                    new Utilitarios().limpaTela_Desabilita(venda);
                    new Utilitarios().limpaTela_Desabilita(produto);
                    new Utilitarios().limpaTela_Desabilita(parcelas);

                    txtObservacoes.setText("");
                    txtTotal.setText("");
                    total = 0;
                    preco = 0;
                    quantidade = 0;
                    subTotal = 0;

                    JOptionPane.showMessageDialog(null, "Arquivo excluído com sucesso!");
                }
            }

        }


    }//GEN-LAST:event_btnApagarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed

        if (botao == "novo" || botao == "editar") {
            JOptionPane.showMessageDialog(null, "Há um arquivo aberto. Cancele ou Salve ele antes de "
                    + "realizar essa operação!");
        } else {
            this.dispose();
        }


    }//GEN-LAST:event_btnSairActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        if (botao == "novo") {

            int id_venda = Integer.parseInt(txtId.getText());

            /*aqui é feito a alteração da venda, foi necessário fazer o método editar ao cadastrar um cliente novo tb,
            pq foi preciso colocar o método inserir no botão novo, pra gerar o número correto da requisição e das parcelas.
             */
            VendasDao dao = new VendasDao();
            Vendas obj = new Vendas();

            Situacao objSit = new Situacao();
            objSit.setId(Integer.parseInt(txtIdSituacao.getText()));

            Clientes objCli = new Clientes();
            objCli.setId(Integer.parseInt(txtIdCliente.getText()));

            obj.setId(id_venda);
            obj.setSituacao(objSit);
            obj.setCliente(objCli);

            Date emisao = txtEmissao.getDate();
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            String emissaoFormatada = formato.format(emisao);
            obj.setEmissao(emissaoFormatada);

            obj.setParcelas(Integer.parseInt(txtIdParcelas.getText()));
            obj.setObservacoes(txtObservacoes.getText());
            obj.setTotal_vendas(Double.parseDouble(txtTotal.getText().replace(".", "").replace(",", ".")));

            dao.editar(obj);

            JOptionPane.showMessageDialog(null, "Arquivo cadastrado com sucesso!");

            // essa parte é para cadastrar os itens.
            for (int i = 0; i < dados.getRowCount(); i++) {

                int qtd_estoque, qtd_vendida, qtd_atualizada;

                ItensVendasDao daoItem = new ItensVendasDao();
                ItensVendas objItem = new ItensVendas();

                Vendas objVen = new Vendas();
                objVen.setId(dao.ultimoCadastro());

                Produtos objPro = new Produtos();
                objPro.setId(Integer.parseInt(dados.getValueAt(i, 0).toString()));

                objItem.setVenda(objVen);
                objItem.setProduto(objPro);
                objItem.setPreco(Double.parseDouble(dados.getValueAt(i, 2).toString().replace(".", "").replace(",", ".")));
                objItem.setQuantidade(Integer.parseInt(dados.getValueAt(i, 3).toString()));
                objItem.setSubtotal(Double.parseDouble(dados.getValueAt(i, 4).toString().replace(".", "").replace(",", ".")));

                ProdutosDao daoPro = new ProdutosDao();
                qtd_estoque = daoPro.retornaEstoque(objPro.getId());
                qtd_vendida = objItem.getQuantidade();
                qtd_atualizada = qtd_estoque - qtd_vendida;
                daoPro.AtualizaEstoque(objPro.getId(), qtd_atualizada);

                daoItem.inserir(objItem);

            }

            // essa parte cadastra as contas.
            DefaultTableModel tabela_contas = (DefaultTableModel) tb_contas.getModel();

            ContasRec objCon = new ContasRec();
            ContasRecDao daoCon = new ContasRecDao();

            for (int i = 0; i < tabela_contas.getRowCount(); i++) {

                objCon.setId(tabela_contas.getValueAt(i, 0).toString());
                objCon.setRequisicao(Integer.parseInt(txtId.getText()));
                objCon.setSequencia(tabela_contas.getValueAt(i, 1).toString());
                objCon.setSituacao("Rec");
                objCon.setCliente(objCli);

                Planos objPla = new Planos();
                objPla.setId(1);

                objCon.setPlano(objPla);
                objCon.setOrigem("Requisição");

                String emissao = tabela_contas.getValueAt(i, 2).toString().replace("/", "-");
                emissao = emissao.substring(6, 10) + "-" + emissao.substring(3, 5) + "-" + emissao.substring(0, 2);
                objCon.setEmissao(emissao);

                String vencimento = tabela_contas.getValueAt(i, 3).toString().replace("/", "-");
                vencimento = vencimento.substring(6, 10) + "-" + vencimento.substring(3, 5) + "-" + vencimento.substring(0, 2);
                objCon.setVencimento(vencimento);

                objCon.setValor_venda(Double.parseDouble(tabela_contas.getValueAt(i, 5).toString().replace(".", "").replace(",", ".")));
                objCon.setValor_final(Double.parseDouble(tabela_contas.getValueAt(i, 5).toString().replace(".", "").replace(",", ".")));

                daoCon.inserir(objCon);

            }

            // essa parte é para setar os botões e txt.
            new Utilitarios().Desabilita_Apenas(venda);
            new Utilitarios().Desabilita_Apenas(produto);
            new Utilitarios().Desabilita_Apenas(parcelas);
            txtObservacoes.setEditable(false);
            btnAdicionar.setEnabled(false);
            btnRemover.setEnabled(false);

            botao = null;
            btnNovo.setSelected(false);
        } else if (botao == "editar") {

            int id_venda = Integer.parseInt(txtId.getText());

            //aqui é feito a alteração da venda.
            VendasDao dao = new VendasDao();
            Vendas obj = new Vendas();

            Situacao objSit = new Situacao();
            objSit.setId(Integer.parseInt(txtIdSituacao.getText()));

            Clientes objCli = new Clientes();
            objCli.setId(Integer.parseInt(txtIdCliente.getText()));

            obj.setId(id_venda);
            obj.setSituacao(objSit);
            obj.setCliente(objCli);

            Date emisao = txtEmissao.getDate();
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            String emissaoFormatada = formato.format(emisao);
            obj.setEmissao(emissaoFormatada);

            obj.setParcelas(Integer.parseInt(txtIdParcelas.getText()));
            obj.setObservacoes(txtObservacoes.getText());
            obj.setTotal_vendas(Double.parseDouble(txtTotal.getText().replace(".", "").replace(",", ".")));

            dao.editar(obj);

            JOptionPane.showMessageDialog(null, "Arquivo alterado com sucesso!");

            // nessa parte é deletado todos os itens antigos da requisição.
            ItensVendasDao daoItem = new ItensVendasDao();
            ItensVendas objItem = new ItensVendas();

            List<ItensVendas> lista = daoItem.consultarItens(id_venda);
            for (int i = 0; i < lista.size(); i++) {

                int qtd_estoque, qtd_devolvida, qtd_atualizada;

                ProdutosDao daoPro = new ProdutosDao();
                Produtos objPro = new Produtos();
                objPro.setId(lista.get(i).getProduto().getId());
                qtd_estoque = daoPro.retornaEstoque(objPro.getId());
                objItem.setQuantidade(lista.get(i).getQuantidade());
                qtd_devolvida = objItem.getQuantidade();
                qtd_atualizada = qtd_estoque + qtd_devolvida;
                daoPro.AtualizaEstoque(objPro.getId(), qtd_atualizada);

                objItem.setId(lista.get(i).getId());
                daoItem.excluirItem(objItem.getId());
            }

            // nessa parte é insirido os itens novos.
            dados = (DefaultTableModel) tb_Itens.getModel();
            for (int i = 0; i < dados.getRowCount(); i++) {

                int qtd_estoque, qtd_vendida, qtd_atualizada;

                Vendas objVen = new Vendas();
                objVen.setId(id_venda);

                Produtos objPro = new Produtos();
                objPro.setId(Integer.parseInt(dados.getValueAt(i, 0).toString()));

                objItem.setVenda(objVen);
                objItem.setProduto(objPro);
                objItem.setPreco(Double.parseDouble(dados.getValueAt(i, 2).toString().replace(".", "").replace(",", ".")));
                objItem.setQuantidade(Integer.parseInt(dados.getValueAt(i, 3).toString()));
                objItem.setSubtotal(Double.parseDouble(dados.getValueAt(i, 4).toString().replace(".", "").replace(",", ".")));

                ProdutosDao daoPro = new ProdutosDao();
                qtd_estoque = daoPro.retornaEstoque(objPro.getId());
                qtd_vendida = objItem.getQuantidade();
                qtd_atualizada = qtd_estoque - qtd_vendida;
                daoPro.AtualizaEstoque(objPro.getId(), qtd_atualizada);

                daoItem.inserir(objItem);

                // nessa parte é apagado as parcelas.
                ContasRecDao daoCon = new ContasRecDao();
                daoCon.excluirDaRequisicao(id_venda);

                // nessa parte lança as contas novas.  
                DefaultTableModel tabela_contas = (DefaultTableModel) tb_contas.getModel();
                ContasRec objCon = new ContasRec();

                for (int c = 0; c < tabela_contas.getRowCount(); c++) {

                    objCon.setId(tabela_contas.getValueAt(c, 0).toString());
                    objCon.setRequisicao(Integer.parseInt(txtId.getText()));
                    objCon.setSequencia(tabela_contas.getValueAt(c, 1).toString());
                    objCon.setSituacao("Rec");
                    objCon.setCliente(objCli);

                    Planos objPla = new Planos();
                    objPla.setId(1);

                    objCon.setPlano(objPla);
                    objCon.setOrigem("Requisição");

                    String emissao = tabela_contas.getValueAt(c, 2).toString().replace("/", "-");
                    emissao = emissao.substring(6, 10) + "-" + emissao.substring(3, 5) + "-" + emissao.substring(0, 2);
                    objCon.setEmissao(emissao);

                    String vencimento = tabela_contas.getValueAt(c, 3).toString().replace("/", "-");
                    vencimento = vencimento.substring(6, 10) + "-" + vencimento.substring(3, 5) + "-" + vencimento.substring(0, 2);
                    objCon.setVencimento(vencimento);

                    objCon.setValor_venda(Double.parseDouble(tabela_contas.getValueAt(c, 5).toString().replace(".", "").replace(",", ".")));
                    objCon.setValor_final(Double.parseDouble(tabela_contas.getValueAt(c, 5).toString().replace(".", "").replace(",", ".")));

                    daoCon.inserir(objCon);

                }

            }

            new Utilitarios().Desabilita_Apenas(venda);
            new Utilitarios().Desabilita_Apenas(produto);
            new Utilitarios().Desabilita_Apenas(parcelas);
            txtObservacoes.setEditable(false);
            btnAdicionar.setEnabled(false);
            btnRemover.setEnabled(false);

            botao = null;
            btnEditar.setSelected(false);

        } else {
            JOptionPane.showMessageDialog(null, "Não há nenhum arquivo para ser salvo!");
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        if (botao == "novo") {

            int id = Integer.parseInt(txtId.getText());

            // mesmo sendo uma venda ainda não concluída, é necessário fazer a exclusão, pois já havia sido criado o cadastro.
            VendasDao dao = new VendasDao();
            dao.excluir(id);

            new Utilitarios().limpaTela_Desabilita(venda);
            new Utilitarios().limpaTela_Desabilita(produto);
            new Utilitarios().limpaTela_Desabilita(parcelas);

            txtObservacoes.setText("");
            txtObservacoes.setEnabled(false);
            txtTotal.setText("");
            dados = (DefaultTableModel) tb_Itens.getModel();
            dados.setNumRows(0);

            DefaultTableModel tabela_contas = (DefaultTableModel) tb_contas.getModel();
            tabela_contas.setNumRows(0);
            btnAdicionar.setEnabled(false);
            btnRemover.setEnabled(false);

            botao = null;
            btnNovo.setSelected(false);
            situacao = "";
            situacaoAnterior = "";

        } else if (botao == "editar") {

            int id = Integer.parseInt(txtId.getText());

            VendasDao dao = new VendasDao();
            Vendas obj = new Vendas();

            obj = dao.consultarPorId(id);

            txtIdSituacao.setText(String.valueOf(obj.getSituacao().getId()));
            txtSituacao.setText(obj.getSituacao().getNome());
            situacao = obj.getSituacao().getNome();
            situacaoAnterior = obj.getSituacao().getNome();

            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            Date emissao;
            try {
                emissao = formato.parse(obj.getEmissao());
                txtEmissao.setDate(emissao);
            } catch (Exception e) {
            }

            txtIdCliente.setText(String.valueOf(obj.getCliente().getId()));
            txtNomeCliente.setText(obj.getCliente().getNome());

            int parcelas = obj.getParcelas();
            txtIdParcelas.setText(String.valueOf(parcelas));

            // esse if/else é pra preencher o campo do número de parcelas.
            if (parcelas == 1) {
                txtParcelas.setText("Não foi parcelado!");
            } else {
                txtParcelas.setText("Parcelado em " + parcelas + "X");
            }
            txtObservacoes.setText(obj.getObservacoes());
            txtTotal.setText(String.valueOf(decimal.format(obj.getTotal_vendas())));
            total = obj.getTotal_vendas();

            ItensVendasDao daoItens = new ItensVendasDao();
            List<ItensVendas> lista = daoItens.consultarItens(id);

            // atualiza a tabela de itens, para como ela estava antes da edição começar.
            DefaultTableModel dados = (DefaultTableModel) tb_Itens.getModel();
            dados.setNumRows(0);

            int situacao = obj.getSituacao().getId();

            for (ItensVendas i : lista) {

                String valor_venda = String.valueOf(decimal.format(i.getPreco()));
                String subtotal = String.valueOf(decimal.format(i.getSubtotal()));

                dados.addRow(new Object[]{
                    i.getProduto().getId(),
                    i.getProduto().getNome(),
                    valor_venda,
                    i.getQuantidade(),
                    subtotal
                });
            }

            ContasRecDao daoContas = new ContasRecDao();
            List<ContasRec> listaContas = daoContas.listarPorRequisicao(id);

            // atualiza a tabela de contas, para como ela estava antes da edição começar.
            DefaultTableModel tabela_contas = (DefaultTableModel) tb_contas.getModel();
            tabela_contas.setNumRows(0);

            for (ContasRec c : listaContas) {
                String temBaixa = c.getBaixa();

                if (temBaixa == null) {
                    String emissaoC = c.getEmissao();
                    emissaoC = emissaoC.substring(8, 10) + "/" + emissaoC.substring(5, 7) + "/" + emissaoC.substring(0, 4);
                    String vencimentoC = c.getVencimento();
                    vencimentoC = vencimentoC.substring(8, 10) + "/" + vencimentoC.substring(5, 7) + "/" + vencimentoC.substring(0, 4);
                    String valor_venda = String.valueOf(decimal.format(c.getValor_venda()));
                    tabela_contas.addRow(new Object[]{
                        c.getId(),
                        c.getSequencia(),
                        emissaoC,
                        vencimentoC,
                        "",
                        valor_venda,
                        c.getSituacao()
                    });
                } else {
                    String emissaoC = c.getEmissao();
                    emissaoC = emissaoC.substring(8, 10) + "/" + emissaoC.substring(5, 7) + "/" + emissaoC.substring(0, 4);
                    String vencimentoC = c.getVencimento();
                    vencimentoC = vencimentoC.substring(8, 10) + "/" + vencimentoC.substring(5, 7) + "/" + vencimentoC.substring(0, 4);
                    String baixaC = c.getBaixa();
                    baixaC = baixaC.substring(8, 10) + "/" + baixaC.substring(5, 7) + "/" + baixaC.substring(0, 4);
                    String valor_venda = String.valueOf(decimal.format(c.getValor_venda()));
                    tabela_contas.addRow(new Object[]{
                        c.getId(),
                        c.getSequencia(),
                        emissaoC,
                        vencimentoC,
                        baixaC,
                        valor_venda,
                        c.getSituacao()
                    });
                }
            }

            new Utilitarios().Desabilita_Apenas(venda);
            new Utilitarios().limpaTela_Desabilita(produto);
            new Utilitarios().Desabilita_Apenas(this.parcelas);
            txtObservacoes.setEditable(false);
            btnAdicionar.setEnabled(false);
            btnRemover.setEnabled(false);

            botao = null;
            btnEditar.setSelected(false);

        } else {
            JOptionPane.showMessageDialog(null, "Não há nenhum arquivo para ser cancelado!");
        }

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed

        try {
            // remove o item da linha selecionada e atualiza os valores.
            dados = (DefaultTableModel) tb_Itens.getModel();
            double precoLinha = Double.parseDouble(tb_Itens.getValueAt(tb_Itens.getSelectedRow(), 4).toString().replace(".", "").replace(",", "."));
            dados.removeRow(tb_Itens.getSelectedRow());

            total -= precoLinha;
            txtTotal.setText(String.valueOf(decimal.format(total)));

            // atualiza a tabela de contas.
            DefaultTableModel tabela_contas = (DefaultTableModel) tb_contas.getModel();
            tabela_contas.setNumRows(0);

            String id = txtId.getText();
            String idFin;

            int parcelas = Integer.parseInt(txtIdParcelas.getText());
            int contParc = 0;
            String parcelaStr;

            Date emissao = txtEmissao.getDate();
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            String emissaoFor = formato.format(emissao);
            Calendar c = Calendar.getInstance();
            c.setTime(emissao);

            Date vencimento;
            String vencimentoFor;

            double valorParcela = (Double.parseDouble(txtTotal.getText().replace(".", "").replace(",", ".")) / parcelas);
            String valorParcelaStr = String.valueOf(decimal.format(valorParcela));
            String LiqRec = "Rec";

            for (int i = 0; i < parcelas; i++) {
                contParc += 1;
                idFin = id + "-" + contParc;

                c.add(Calendar.DATE, +dias);
                vencimento = c.getTime();
                vencimentoFor = formato.format(vencimento);

                parcelaStr = "(" + contParc + "-" + parcelas + ")";

                tabela_contas.addRow(new Object[]{
                    idFin,
                    parcelaStr,
                    emissaoFor,
                    vencimentoFor,
                    "",
                    valorParcelaStr,
                    LiqRec
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione o item que deseja excluir!");
        }


    }//GEN-LAST:event_btnRemoverActionPerformed

    private void txtIdProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdProdutoMouseClicked
        situacao = txtSituacao.getText();
        if (evt.getClickCount() == 2) {

            // só consegue abrir a tabela de itens, caso a situação da venda tenha sido escolhida.
            if (situacao.equals("A Vista") || situacao.equals("A Prazo")) {
                ProFil.mostrarTela(this);

            } else {
                JOptionPane.showMessageDialog(null, "Escolha a forma de pagamento: A Vista ou A Prazo!");
            }

        }

    }//GEN-LAST:event_txtIdProdutoMouseClicked

    private void txtIdClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdClienteKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            int id = Integer.parseInt(txtIdCliente.getText());

            ClientesDao dao = new ClientesDao();
            Clientes obj = new Clientes();
            obj = dao.consultarPorId(id);

            txtNomeCliente.setText(obj.getNome());

        }
    }//GEN-LAST:event_txtIdClienteKeyPressed

    private void txtIdClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdClienteMouseClicked

        if (evt.getClickCount() == 2) {
            CliFil.mostrarTela(this);
        }

    }//GEN-LAST:event_txtIdClienteMouseClicked

    private void btnBaixarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaixarActionPerformed

        if (botao == "novo" || botao == "editar") {
            JOptionPane.showMessageDialog(null, "Há um arquivo aberto. Cancele ou Salve ele antes de "
                    + "realizar essa operação!");
        } else {
            String validacao = txtId.getText();

            if (validacao.equals("")) {
                JOptionPane.showMessageDialog(null, "Não há nenhum arquivo para ser baixado!");
            } else {

                // faz a verificação na tabela de contas, e identifica se tem uma ou mais parcelas pagas.
                DefaultTableModel tbl_contas = (DefaultTableModel) tb_contas.getModel();

                for (int i = 0; i < tbl_contas.getRowCount(); i++) {
                    String verificacao = tbl_contas.getValueAt(i, 6).toString();
                    if (verificacao.equals("Liq")) {
                        alterar = false;
                    }
                }

                if (alterar == false) {
                    // caso tenha alguma parcela paga, não autoriza fazer a baixa.
                    JOptionPane.showMessageDialog(null, "Toda ou Parte dessa requisição já foi paga. Portanto, ela não "
                            + "pode ser baixada direto da requisição. Vá em Baixar Contas a Receber!");
                    alterar = true;
                } else {
                    // caso não tenha nenhuma parcela baixada, abre a tela para baixar todas as parcelas de uma vez.
                    BaixFil.mostrarTela(this);
                    int id_req = Integer.parseInt(txtId.getText());

                    ContasRecDao daoContas = new ContasRecDao();
                    List<ContasRec> listaContas = daoContas.listarPorRequisicao(id_req);

                    DefaultTableModel tabela_conta = (DefaultTableModel) BaixFil.tbContasReceber.getModel();
                    tabela_conta.setNumRows(0);

                    for (ContasRec c : listaContas) {

                        String emissaoC = c.getEmissao();
                        emissaoC = emissaoC.substring(8, 10) + "/" + emissaoC.substring(5, 7) + "/" + emissaoC.substring(0, 4);
                        String vencimentoC = c.getVencimento();
                        vencimentoC = vencimentoC.substring(8, 10) + "/" + vencimentoC.substring(5, 7) + "/" + vencimentoC.substring(0, 4);
                        String valor_venda = String.valueOf(decimal.format(c.getValor_venda()));
                        tabela_conta.addRow(new Object[]{
                            true,
                            c.getId(),
                            emissaoC,
                            vencimentoC,
                            c.getSituacao(),
                            valor_venda
                        });
                    }

                    String total = txtTotal.getText();
                    BaixFil.txtTotal.setText(total);
                    BaixFil.valorVenda = Double.parseDouble(total.replace(".", "").replace(",", "."));
                    BaixFil.id_req = id_req;

                    Date hoje = new Date();
                    BaixFil.txtPagamento.setDate(hoje);
                }

            }
        }

    }//GEN-LAST:event_btnBaixarActionPerformed

    private void txtCartaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCartaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCartaoActionPerformed

    private void txtIdSituacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdSituacaoMouseClicked

        if (evt.getClickCount() == 2) {
            SitFil.mostrarTela(this);
        }

    }//GEN-LAST:event_txtIdSituacaoMouseClicked

    private void txtIdParcelasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdParcelasKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            //  abaixo está regra de negócio, para parcelamento de requisições.             
            if (situacao.equals("")) {
                JOptionPane.showMessageDialog(null, "Escolha a forma de pagamento: A Vista ou A Prazo!");
                txtIdParcelas.setText("");
            } else {

                int qtdParcelas = Integer.parseInt(txtIdParcelas.getText());

                if (situacao.equals("A Vista") && qtdParcelas > 1) {
                    JOptionPane.showMessageDialog(null, "Valor a vista não pode ser parcelado!");
                    txtIdParcelas.setText("1");
                } else {

                    if (qtdParcelas < 1 || qtdParcelas > 10) {
                        DefaultTableModel tb_parcelas = (DefaultTableModel) tb_contas.getModel();
                        int parcelas = tb_parcelas.getRowCount();
                        txtIdParcelas.setText(String.valueOf(parcelas));
                        JOptionPane.showMessageDialog(null, "10 é o máximo de parcelas permitido!");
                    } else {
                        if (qtdParcelas == 1) {
                            txtParcelas.setText("Não foi parcelado!");
                        } else {
                            txtParcelas.setText("Parcelado em " + qtdParcelas + "X");
                        }
                        //atualiza a tabela de contas
                        DefaultTableModel tabela_contas = (DefaultTableModel) tb_contas.getModel();
                        tabela_contas.setNumRows(0);

                        String id = txtId.getText();
                        String idFin;

                        int parcelas = Integer.parseInt(txtIdParcelas.getText());
                        int contParc = 0;
                        String parcelaStr;

                        Date emissao = txtEmissao.getDate();
                        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                        String emissaoFor = formato.format(emissao);
                        Calendar c = Calendar.getInstance();
                        c.setTime(emissao);

                        Date vencimento;
                        String vencimentoFor;

                        double valorParcela = (total / parcelas);
                        String valorParcelaStr = String.valueOf(decimal.format(valorParcela));
                        String LiqRec = "Rec";

                        for (int i = 0; i < parcelas; i++) {
                            contParc += 1;
                            idFin = id + "-" + contParc;

                            c.add(Calendar.DATE, +dias);
                            vencimento = c.getTime();
                            vencimentoFor = formato.format(vencimento);

                            parcelaStr = "(" + contParc + "-" + parcelas + ")";

                            tabela_contas.addRow(new Object[]{
                                idFin,
                                parcelaStr,
                                emissaoFor,
                                vencimentoFor,
                                "",
                                valorParcelaStr,
                                LiqRec
                            });
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_txtIdParcelasKeyPressed

    private void txtIdParcelasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdParcelasFocusLost

        // caso esteja um valor errado no campo de parcelas, ele volta ao correto, quando é clicado fora desse campo.
        DefaultTableModel tb_parcelas = (DefaultTableModel) tb_contas.getModel();
        int parcelas = tb_parcelas.getRowCount();

        if (situacao.equals("A Vista")) {
            txtIdParcelas.setText("1");
        } else {
            if (parcelas == 0) {
                txtIdParcelas.setText("");
            } else {
                txtIdParcelas.setText(String.valueOf(parcelas));
            }
        }
    }//GEN-LAST:event_txtIdParcelasFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel botoes;
    public javax.swing.JButton btnAdicionar;
    public javax.swing.JButton btnApagar;
    public javax.swing.JButton btnBaixar;
    public javax.swing.JButton btnCancelar;
    public javax.swing.JButton btnEditar;
    public javax.swing.JButton btnFiltrar;
    public javax.swing.JButton btnNovo;
    public javax.swing.JButton btnRemover;
    public javax.swing.JButton btnSair;
    public javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel parcelas;
    private javax.swing.JPanel produto;
    public javax.swing.JTable tb_Itens;
    private javax.swing.JTabbedPane tb_ItensVencimentos;
    public javax.swing.JTable tb_contas;
    public com.toedter.calendar.JDateChooser txtEmissao;
    public javax.swing.JTextField txtId;
    public javax.swing.JTextField txtIdCliente;
    public javax.swing.JTextField txtIdParcelas;
    public javax.swing.JTextField txtIdProduto;
    public javax.swing.JTextField txtIdSituacao;
    public javax.swing.JTextField txtNomeCliente;
    public javax.swing.JTextField txtNomeProduto;
    public javax.swing.JTextArea txtObservacoes;
    public javax.swing.JTextField txtParcelas;
    public javax.swing.JTextField txtPreco;
    public javax.swing.JTextField txtQtd;
    public javax.swing.JTextField txtSituacao;
    public javax.swing.JTextField txtTotal;
    private javax.swing.JPanel venda;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projeto.view;

import br.com.projeto.dao.ContasPagDao;
import br.com.projeto.model.ContasPag;
import br.com.projeto.model.Utilitarios;
import java.text.DecimalFormat;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rafael Godoy
 */
public class FrmContaPagarFiltro extends javax.swing.JFrame {

    FrmFornecedoresFiltro forFil = new FrmFornecedoresFiltro(); // pra chamar a tela de filtro de fornecedores.

    String origem = null; // Variável para determinar qual form chamou esse, assim determina quais ações serão executadas
    // de acordo com a origem em questão.

    /**
     * Os métodos mostrarTela especifica qual form chamou esse, esse form pode
     * trocar informações (buscar e levar) com o form que o chamou.
     */
    private FrmComprasContaPagar contasPagar;

    public void mostrarTela(FrmComprasContaPagar contPag) {
        this.contasPagar = contPag;
        this.origem = "contasPagar";
        setVisible(true);
    }

    private FrmComprasContaPagLiq contasPagLiq;

    public void mostrarTela(FrmComprasContaPagLiq contPagLiq) {
        this.contasPagLiq = contPagLiq;
        this.origem = "contasPagLiq";
        setVisible(true);
    }

    private FrmContaPagarBaixar contasPagBaixar;

    public void mostrarTela(FrmContaPagarBaixar contPagBaix) {
        this.contasPagBaixar = contPagBaix;
        this.origem = "contasPagBaixar";
        setVisible(true);
    }

    DecimalFormat decimal = new DecimalFormat("#,##0.00");
    List<ContasPag> lista;
    private String reqTab; // pra preencher a tabela, se tiver número de requisição, é colocado o número,
    //senão o campo fica em branco.

    public FrmContaPagarFiltro() {
        initComponents();

        Utilitarios util = new Utilitarios();
        util.inserirIcone(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cbData = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDataInicio = new com.toedter.calendar.JDateChooser();
        txtDataFim = new com.toedter.calendar.JDateChooser();
        jPanel5 = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtFornecedor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(173, 198, 242));
        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel1.setBackground(new java.awt.Color(0, 51, 255));

        lblTitulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Muda conforme a origem");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(lblTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitulo)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText(" Filtrar por:");

        cbData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbData.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Emissão", "Vencimento", "Tudo" }));
        cbData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDataActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("De:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Até:");

        txtDataInicio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtDataFim.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDataInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(txtDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/ok.png"))); // NOI18N
        btnOk.setToolTipText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/sair.png"))); // NOI18N
        btnSair.setToolTipText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(btnSair, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addGap(9, 9, 9)
                .addComponent(btnOk))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Fornecedor");

        txtFornecedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFornecedorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed

        /**
         * 1º identifica a origem que chamou esse form. Depois qual o período
         * escolhido para a busca, e se está identificado o fornecedor. Trazendo
         * os dados com base nessas duas informações.
         */
        if (origem.equals("contasPagar")) {
            String id_fornecedor = txtFornecedor.getText();
            String tipoFiltro = cbData.getSelectedItem().toString();
            String situacao = "Pag";

            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");

            Date Inicio = txtDataInicio.getDate();
            String dataInicio = formato.format(Inicio);

            Date Fim = txtDataFim.getDate();
            String dataFim = formato.format(Fim);

            ContasPagDao dao = new ContasPagDao();

            DefaultTableModel dados = (DefaultTableModel) contasPagar.tbContasPagar.getModel();
            dados.setNumRows(0);

            if (id_fornecedor.equals("")) {

                if (tipoFiltro == "Tudo") {
                    lista = dao.filtrarContasSemFornecedorTudo(situacao);
                } else if (tipoFiltro == "Emissão") {
                    lista = dao.filtrarContasSemFornecedorEmissao(situacao, dataInicio, dataFim);
                } else if (tipoFiltro == "Vencimento") {
                    lista = dao.filtrarContasSemFornecedorVencimento(situacao, dataInicio, dataFim);
                }
            } else {
                if (tipoFiltro == "Tudo") {
                    lista = dao.filtrarContasComFornecedorTudo(Integer.parseInt(id_fornecedor), situacao);
                } else if (tipoFiltro == "Emissão") {
                    lista = dao.filtrarContasComFornecedorEmissao(Integer.parseInt(id_fornecedor), situacao, dataInicio, dataFim);
                } else if (tipoFiltro == "Vencimento") {
                    lista = dao.filtrarContasComFornecedorVencimento(Integer.parseInt(id_fornecedor), situacao, dataInicio, dataFim);
                }
            }
            for (ContasPag c : lista) {

                if (c.getRequisicao() == 0) {
                    reqTab = "";
                } else {
                    reqTab = String.valueOf(c.getRequisicao());
                }

                String emissao = c.getEmissao();
                emissao = emissao.substring(8, 10) + "/" + emissao.substring(5, 7) + "/" + emissao.substring(0, 4);
                String vencimento = c.getVencimento();
                vencimento = vencimento.substring(8, 10) + "/" + vencimento.substring(5, 7) + "/" + vencimento.substring(0, 4);
                String valor_final = String.valueOf(decimal.format(c.getValor_final()));

                dados.addRow(new Object[]{
                    c.getId(),
                    reqTab,
                    c.getFornecedor().getNome(),
                    emissao,
                    vencimento,
                    valor_final
                });
            }
            this.dispose();
            contasPagar.painel_compras.setSelectedIndex(0);
        } else if (origem.equals("contasPagBaixar")) {
            String id_fornecedor = txtFornecedor.getText();
            String tipoFiltro = cbData.getSelectedItem().toString();
            String situacao = "Pag";

            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");

            Date Inicio = txtDataInicio.getDate();
            String dataInicio = formato.format(Inicio);

            Date Fim = txtDataFim.getDate();
            String dataFim = formato.format(Fim);

            ContasPagDao dao = new ContasPagDao();

            DefaultTableModel dados = (DefaultTableModel) contasPagBaixar.tbContasPagar.getModel();
            dados.setNumRows(0);

            if (id_fornecedor.equals("")) {

                if (tipoFiltro == "Tudo") {
                    lista = dao.filtrarContasSemFornecedorTudo(situacao);
                } else if (tipoFiltro == "Emissão") {
                    lista = dao.filtrarContasSemFornecedorEmissao(situacao, dataInicio, dataFim);
                } else if (tipoFiltro == "Vencimento") {
                    lista = dao.filtrarContasSemFornecedorVencimento(situacao, dataInicio, dataFim);
                }
            } else {
                if (tipoFiltro == "Tudo") {
                    lista = dao.filtrarContasComFornecedorTudo(Integer.parseInt(id_fornecedor), situacao);
                } else if (tipoFiltro == "Emissão") {
                    lista = dao.filtrarContasComFornecedorEmissao(Integer.parseInt(id_fornecedor), situacao, dataInicio, dataFim);
                } else if (tipoFiltro == "Vencimento") {
                    lista = dao.filtrarContasComFornecedorVencimento(Integer.parseInt(id_fornecedor), situacao, dataInicio, dataFim);
                }
            }
            for (ContasPag c : lista) {
                String emissao = c.getEmissao();
                emissao = emissao.substring(8, 10) + "/" + emissao.substring(5, 7) + "/" + emissao.substring(0, 4);
                String vencimento = c.getVencimento();
                vencimento = vencimento.substring(8, 10) + "/" + vencimento.substring(5, 7) + "/" + vencimento.substring(0, 4);
                String valor_final = String.valueOf(decimal.format(c.getValor_final()));

                if (c.getRequisicao() == 0) {
                    reqTab = "";
                } else {
                    reqTab = String.valueOf(c.getRequisicao());
                }

                dados.addRow(new Object[]{
                    false,
                    c.getId(),
                    reqTab,
                    c.getFornecedor().getNome(),
                    emissao,
                    vencimento,
                    valor_final
                });
            }
            this.dispose();

        } else if (origem.equals("contasPagLiq")) {
            String id_fornecedor = txtFornecedor.getText();
            String tipoFiltro = cbData.getSelectedItem().toString();
            String situacao = "Liq";

            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");

            Date Inicio = txtDataInicio.getDate();
            String dataInicio = formato.format(Inicio);

            Date Fim = txtDataFim.getDate();
            String dataFim = formato.format(Fim);

            ContasPagDao dao = new ContasPagDao();

            DefaultTableModel dados = (DefaultTableModel) contasPagLiq.tbContasPagLiq.getModel();
            dados.setNumRows(0);

            if (id_fornecedor.equals("")) {

                if (tipoFiltro == "Tudo") {
                    lista = dao.filtrarContasSemFornecedorTudo(situacao);
                } else if (tipoFiltro == "Emissão") {
                    lista = dao.filtrarContasSemFornecedorEmissao(situacao, dataInicio, dataFim);
                } else if (tipoFiltro == "Vencimento") {
                    lista = dao.filtrarContasSemFornecedorVencimento(situacao, dataInicio, dataFim);
                }
            } else {
                if (tipoFiltro == "Tudo") {
                    lista = dao.filtrarContasComFornecedorTudo(Integer.parseInt(id_fornecedor), situacao);
                } else if (tipoFiltro == "Emissão") {
                    lista = dao.filtrarContasComFornecedorEmissao(Integer.parseInt(id_fornecedor), situacao, dataInicio, dataFim);
                } else if (tipoFiltro == "Vencimento") {
                    lista = dao.filtrarContasComFornecedorVencimento(Integer.parseInt(id_fornecedor), situacao, dataInicio, dataFim);
                }
            }
            for (ContasPag c : lista) {
                String emissao = c.getEmissao();
                emissao = emissao.substring(8, 10) + "/" + emissao.substring(5, 7) + "/" + emissao.substring(0, 4);
                String vencimento = c.getVencimento();
                vencimento = vencimento.substring(8, 10) + "/" + vencimento.substring(5, 7) + "/" + vencimento.substring(0, 4);
                String pagamento = c.getBaixa();
                pagamento = pagamento.substring(8, 10) + "/" + pagamento.substring(5, 7) + "/" + pagamento.substring(0, 4);
                String valor_final = String.valueOf(decimal.format(c.getValor_final()));

                if (c.getRequisicao() == 0) {
                    reqTab = "";
                } else {
                    reqTab = String.valueOf(c.getRequisicao());
                }

                dados.addRow(new Object[]{
                    c.getId(),
                    reqTab,
                    c.getFornecedor().getNome(),
                    emissao,
                    vencimento,
                    pagamento,
                    valor_final
                });
            }
            this.dispose();
            contasPagLiq.painel_compras.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void cbDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDataActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed

        this.dispose();

    }//GEN-LAST:event_btnSairActionPerformed

    private void txtFornecedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFornecedorMouseClicked

        if (evt.getClickCount() == 2) {
            forFil.mostrarTela(this);
        }

    }//GEN-LAST:event_txtFornecedorMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        Date hoje = new Date();
        txtDataInicio.setDate(hoje);
        txtDataFim.setDate(hoje);

    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmContaPagarFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmContaPagarFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmContaPagarFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmContaPagarFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmContaPagarFiltro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> cbData;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    public javax.swing.JLabel lblTitulo;
    private com.toedter.calendar.JDateChooser txtDataFim;
    private com.toedter.calendar.JDateChooser txtDataInicio;
    public javax.swing.JTextField txtFornecedor;
    // End of variables declaration//GEN-END:variables
}

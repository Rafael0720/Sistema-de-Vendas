/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projeto.view;

import br.com.projeto.dao.ClientesDao;
import br.com.projeto.dao.ContasRecDao;
import br.com.projeto.dao.PlanosDao;
import br.com.projeto.dao.VendasNoCartaoDao;
import br.com.projeto.model.Clientes;
import br.com.projeto.model.ContasRec;
import br.com.projeto.model.Planos;
import br.com.projeto.model.Utilitarios;
import br.com.projeto.model.VendasNoCartao;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rafael Godoy
 */
public class FrmVendasBaixar extends javax.swing.JFrame {

    /**
     * O método mostrarTela especifica qual form chamou esse, esse form pode
     * trocar informações (buscar e levar) com o form que o chamou.
     */
    private FrmVendas vendas;

    public void mostrarTela(FrmVendas vend) {
        this.vendas = vend;
        setVisible(true);
    }

    FrmPlanosFiltro plaFil = new FrmPlanosFiltro();

    DecimalFormat decimal = new DecimalFormat("#,##0.00");
    int id_req = 0;
    double taxa = 0;
    double valorVenda = 0;
    double desconto = 0;
    double valorFinal = 0;
    boolean baixado = false;
    String pagamentoFor;

    public FrmVendasBaixar() {
        initComponents();

        Utilitarios util = new Utilitarios();
        util.inserirIcone(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbContasReceber = new javax.swing.JTable();
        pnl_dados = new javax.swing.JPanel();
        txtTotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtIdPlano = new javax.swing.JTextField();
        txtPlano = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        txtPagamento = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        btnBaixar = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(173, 198, 242));
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel1.setBackground(new java.awt.Color(0, 51, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Baixar Contas a Receber");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(144, 144, 144))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/sair.png"))); // NOI18N
        btnSair.setToolTipText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnSair)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tbContasReceber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbContasReceber.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OK", "Título", "Emissão", "Vencimento", "Status", "Valor Final"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbContasReceber.setRowHeight(20);
        jScrollPane1.setViewportView(tbContasReceber);
        if (tbContasReceber.getColumnModel().getColumnCount() > 0) {
            tbContasReceber.getColumnModel().getColumn(0).setPreferredWidth(10);
            tbContasReceber.getColumnModel().getColumn(1).setPreferredWidth(30);
        }

        pnl_dados.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(255, 255, 255));
        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Total a Baixar:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Plano:");

        txtIdPlano.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtIdPlano.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIdPlanoMouseClicked(evt);
            }
        });
        txtIdPlano.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdPlanoKeyPressed(evt);
            }
        });

        txtPlano.setEditable(false);
        txtPlano.setBackground(new java.awt.Color(255, 255, 255));
        txtPlano.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Qtd.:");

        txtQuantidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtQuantidade.setText("1");
        txtQuantidade.setEnabled(false);

        txtPagamento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Pagamento:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tipo:");

        txtTipo.setEditable(false);
        txtTipo.setBackground(new java.awt.Color(255, 255, 255));
        txtTipo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTipoMouseClicked(evt);
            }
        });

        btnBaixar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/baixar.png"))); // NOI18N
        btnBaixar.setToolTipText("Baixar");
        btnBaixar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaixarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_dadosLayout = new javax.swing.GroupLayout(pnl_dados);
        pnl_dados.setLayout(pnl_dadosLayout);
        pnl_dadosLayout.setHorizontalGroup(
            pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_dadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIdPlano, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(2, 2, 2)
                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                        .addComponent(txtPlano, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                        .addComponent(txtPagamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBaixar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnl_dadosLayout.setVerticalGroup(
            pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_dadosLayout.createSequentialGroup()
                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBaixar)
                            .addGroup(pnl_dadosLayout.createSequentialGroup()
                                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtIdPlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnl_dados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(pnl_dados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdPlanoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdPlanoMouseClicked

        if (evt.getClickCount() == 2) {
            plaFil.mostrarTela(this);
        }

    }//GEN-LAST:event_txtIdPlanoMouseClicked

    private void btnBaixarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaixarActionPerformed

        /**
         * é feito a baixa de todas as parcelas que estão na requisição. Caso
         * seja uma venda paga com cartão, é lançado as parcelas do cartão, que
         * pode ser consultado posteriormente, para ter um controle de tudo que
         * foi vendido no cartão.
         */
        DefaultTableModel tb_contas = (DefaultTableModel) tbContasReceber.getModel();
        String plano = txtPlano.getText();
        Date pagamento = txtPagamento.getDate();

        ContasRecDao dao = new ContasRecDao();
        ContasRec obj = new ContasRec();

        if (plano.equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o plano e a data do pagamento!");
        } else {
            // essa parte é feito a baixa das contas.
            for (int i = 0; i < tb_contas.getRowCount(); i++) {
                obj.setId(tb_contas.getValueAt(i, 1).toString());
                obj.setSituacao("Liq");

                Planos objPla = new Planos();
                objPla.setId(Integer.parseInt(txtIdPlano.getText()));
                obj.setPlano(objPla);

                SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
                pagamento = txtPagamento.getDate();
                pagamentoFor = formato.format(pagamento);
                obj.setBaixa(pagamentoFor);

                dao.baixarEstornar(obj);
            }

            //essa parte é para lançar a venda no cartão, caso tenha.
            String tipo = txtTipo.getText();

            if (tipo.equals("Crédito") || tipo.equals("Débito")) {
                VendasNoCartao objCart = new VendasNoCartao();
                VendasNoCartaoDao daoCart = new VendasNoCartaoDao();
                Planos objPla = new Planos();

                SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
                pagamentoFor = formato.format(pagamento);

                if (tipo.equals("Débito")) {
                    objCart.setId_requisicao(id_req);
                    objCart.setEmissao(pagamentoFor);
                    objCart.setVencimento(pagamentoFor);
                    objCart.setSituacao("A baixar");
                    objCart.setValorVenda(valorVenda);
                    desconto = (valorVenda / 100) * taxa;
                    objCart.setDesconto(desconto);
                    valorFinal = valorVenda - desconto;
                    objCart.setValorFinal(valorFinal);
                    int id_plano = Integer.parseInt(txtIdPlano.getText());
                    objPla.setId(id_plano);
                    objCart.setPlano(objPla);
                    daoCart.inserir(objCart);
                } else {
                    Date vencimento = pagamento;
                    int dias = 30;
                    int qtdParc = Integer.parseInt(txtQuantidade.getText());
                    double valorParc = valorVenda / qtdParc;
                    Calendar c = Calendar.getInstance();
                    c.setTime(vencimento);
                    String vencimentoFor;

                    for (int i = 0; i < qtdParc; i++) {
                        objCart.setId_requisicao(id_req);
                        objCart.setEmissao(pagamentoFor);
                        c.add(Calendar.DATE, +dias);
                        vencimento = c.getTime();
                        vencimentoFor = formato.format(vencimento);
                        objCart.setVencimento(vencimentoFor);
                        objCart.setSituacao("A baixar");
                        objCart.setValorVenda(valorParc);
                        desconto = (valorParc / 100) * taxa;
                        objCart.setDesconto(desconto);
                        valorFinal = valorParc - desconto;
                        objCart.setValorFinal(valorFinal);
                        int id_plano = Integer.parseInt(txtIdPlano.getText());
                        objPla.setId(id_plano);
                        objCart.setPlano(objPla);
                        daoCart.inserir(objCart);
                    }
                }
            }

            //aqui faz os ajustes finais
            JOptionPane.showMessageDialog(null, "Requisição baixada com sucesso!");
            tb_contas.setNumRows(0);

            Utilitarios util = new Utilitarios();
            util.limpaTela_Apenas(pnl_dados);
            txtPagamento.setCalendar(null);
            txtQuantidade.setEnabled(false);
            taxa = 0;
            baixado = true;
        }


    }//GEN-LAST:event_btnBaixarActionPerformed

    private void txtTipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTipoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoMouseClicked

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed

        /**
         * se tiver sido escolhido a opção "Baixar" anteriormente, ao sair é
         * feito as alterações na requisição. Caso não tenho feito a baixa, ao
         * clicar em sair, a requisição permanece igual.
         */
        if (baixado == true) {
            DefaultTableModel tb_contasV = (DefaultTableModel) vendas.tb_contas.getModel();
            tb_contasV.setNumRows(0);

            ContasRecDao daoContas = new ContasRecDao();
            List<ContasRec> lista = daoContas.listarPorRequisicao(id_req);

            for (ContasRec c : lista) {
                String emissaoC = c.getEmissao();
                emissaoC = emissaoC.substring(8, 10) + "/" + emissaoC.substring(5, 7) + "/" + emissaoC.substring(0, 4);
                String vencimentoC = c.getVencimento();
                vencimentoC = vencimentoC.substring(8, 10) + "/" + vencimentoC.substring(5, 7) + "/" + vencimentoC.substring(0, 4);
                String baixaC = c.getBaixa();
                baixaC = baixaC.substring(8, 10) + "/" + baixaC.substring(5, 7) + "/" + baixaC.substring(0, 4);
                String valor_venda = String.valueOf(decimal.format(c.getValor_venda()));
                tb_contasV.addRow(new Object[]{
                    c.getId(),
                    c.getSequencia(),
                    emissaoC,
                    vencimentoC,
                    baixaC,
                    valor_venda,
                    c.getSituacao()
                });
            }
        }
        id_req = 0;

        taxa = 0;
        valorVenda = 0;
        desconto = 0;
        valorFinal = 0;
        baixado = false;
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        Date hoje = new Date();
        txtPagamento.setDate(hoje);
    }//GEN-LAST:event_formWindowActivated

    private void txtIdPlanoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdPlanoKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Planos objPla = new Planos();
            PlanosDao daoPla = new PlanosDao();
            int id = Integer.parseInt(txtIdPlano.getText());
            objPla = daoPla.consultarPorId(id);

            txtPlano.setText(objPla.getNome());
            txtTipo.setText(objPla.getTipo());
            taxa = objPla.getPorcentagem();

            String tipo = objPla.getTipo();
            if (tipo.equals("Crédito")) {
                // caso o pagamento seja feito no crédito, é habilitado o campo de parcelas.
                txtQuantidade.setEnabled(true);
                txtQuantidade.requestFocus();
                txtQuantidade.selectAll();
            } else {
                // caso o pagamento não seja feito no crédito, é desabilitado o campo de parcelas e fica 1 automaticamente.
                txtQuantidade.setEnabled(false);
                txtQuantidade.setText("1");
            }
        }

    }//GEN-LAST:event_txtIdPlanoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmVendasBaixar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmVendasBaixar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmVendasBaixar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmVendasBaixar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmVendasBaixar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBaixar;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnl_dados;
    public javax.swing.JTable tbContasReceber;
    public javax.swing.JTextField txtIdPlano;
    public com.toedter.calendar.JDateChooser txtPagamento;
    public javax.swing.JTextField txtPlano;
    public javax.swing.JTextField txtQuantidade;
    public javax.swing.JTextField txtTipo;
    public javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}

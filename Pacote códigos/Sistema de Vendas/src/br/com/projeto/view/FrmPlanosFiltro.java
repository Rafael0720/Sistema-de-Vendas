/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projeto.view;

import br.com.projeto.dao.PlanosDao;
import br.com.projeto.model.Planos;
import br.com.projeto.model.Utilitarios;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Rafael Godoy
 */
public class FrmPlanosFiltro extends javax.swing.JFrame {

    String origem = null; // Variável para determinar qual form chamou esse, assim determina quais ações serão executadas
    // de acordo com a origem em questão.   

    DecimalFormat decimal = new DecimalFormat("#,##0.00");

    /**
     * Os métodos mostrarTela especifica qual form chamou esse, esse form pode
     * trocar informações (buscar e levar) com o form que o chamou.
     */
    private FrmVendasNoCartao vendasCart;

    public void MostrarTelaCart(FrmVendasNoCartao vendCart) {
        this.vendasCart = vendCart;
        this.origem = "cartao";
        setVisible(true);
    }

    private FrmPlanos plano;

    public void mostrarTela(FrmPlanos plan) {
        this.plano = plan;
        this.origem = "plano";
        setVisible(true);
    }

    private FrmVendasContaReceber contasReceber;

    public void mostrarTela(FrmVendasContaReceber contRec) {
        this.contasReceber = contRec;
        this.origem = "contasReceber";
        setVisible(true);
    }

    private FrmVendasContaRecLiq contasRecLiq;

    public void mostrarTela(FrmVendasContaRecLiq contRecLiq) {
        this.contasRecLiq = contRecLiq;
        this.origem = "contasRecLiq";
        setVisible(true);
    }

    private FrmContaReceberBaixar contasReceberBaixar;

    public void mostrarTela(FrmContaReceberBaixar contRecBaix) {
        this.contasReceberBaixar = contRecBaix;
        this.origem = "contasReceberBaixar";
        setVisible(true);
    }

    private FrmComprasContaPagLiq contasPagarLiq;

    public void mostrarTela(FrmComprasContaPagLiq contPagLiq) {
        this.contasPagarLiq = contPagLiq;
        this.origem = "contasPagarLiq";
        setVisible(true);
    }

    private FrmComprasContaPagar contasPagar;

    public void mostrarTela(FrmComprasContaPagar contPag) {
        this.contasPagar = contPag;
        this.origem = "contasPagar";
        setVisible(true);
    }

    private FrmContaPagarBaixar contasPagarBaixar;

    public void mostrarTela(FrmContaPagarBaixar contPagBaix) {
        this.contasPagarBaixar = contPagBaix;
        this.origem = "contasPagarBaixar";
        setVisible(true);
    }

    private FrmVendasBaixar vendasBaixar;

    public void mostrarTela(FrmVendasBaixar vendBaix) {
        this.vendasBaixar = vendBaix;
        this.origem = "vendasBaixar";
        setVisible(true);
    }

    public FrmPlanosFiltro() {
        initComponents();

        Utilitarios util = new Utilitarios();
        util.inserirIcone(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_Planos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        txtNome = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel4.setBackground(new java.awt.Color(173, 198, 242));
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBackground(new java.awt.Color(0, 0, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Filtrar Planos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(jLabel1)
                .addGap(222, 222, 222))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tb_Planos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tb_Planos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Plano", "Tipo", "Porcentagem"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_Planos.setRowHeight(20);
        jScrollPane1.setViewportView(tb_Planos);
        if (tb_Planos.getColumnModel().getColumnCount() > 0) {
            tb_Planos.getColumnModel().getColumn(0).setPreferredWidth(10);
            tb_Planos.getColumnModel().getColumn(1).setPreferredWidth(200);
            tb_Planos.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/ok.png"))); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        txtNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
        });

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnOk)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(txtNome))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed

        String nome = txtNome.getText();

        if (nome.equals("")) {
            DefaultTableModel dados = (DefaultTableModel) tb_Planos.getModel();
            dados.setNumRows(0);

            PlanosDao dao = new PlanosDao();
            List<Planos> lista = dao.listarPlanos();

            for (Planos p : lista) {
                String porcentagem = String.valueOf(decimal.format(p.getPorcentagem()));
                dados.addRow(new Object[]{
                    p.getId(),
                    p.getNome(),
                    p.getTipo(),
                    porcentagem
                });
            }
        } else {
            nome = nome + "%";

            DefaultTableModel dados = (DefaultTableModel) tb_Planos.getModel();
            dados.setNumRows(0);

            PlanosDao dao = new PlanosDao();
            List<Planos> lista = dao.consultarPorNome(nome);

            for (Planos p : lista) {
                String porcentagem = String.valueOf(decimal.format(p.getPorcentagem()));
                dados.addRow(new Object[]{
                    p.getId(),
                    p.getNome(),
                    p.getTipo(),
                    porcentagem
                });
            }
        }

    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed

        /**
         * trará as informações de acordo com o plano selecionado, e retornará
         * somente as informações pertinentes, ou seja, dependendo do form de
         * origem, ele retornará as informções que aquele form precisa.
         */
        int validacao = tb_Planos.getSelectedRowCount();
        if (validacao == 0) {
            this.dispose();
        } else if (validacao > 1) {
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha!");
        } else {
            if (origem.equals("plano")) {
                int id = Integer.parseInt(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 0).toString());
                PlanosDao dao = new PlanosDao();
                Planos obj = new Planos();
                obj = dao.consultarPorId(id);

                plano.txtId.setText(String.valueOf(obj.getId()));
                plano.txtNome.setText(obj.getNome());
                plano.cbTipo.setSelectedItem(obj.getTipo());
                plano.txtPorcentagem.setText(String.valueOf(decimal.format(obj.getPorcentagem())));
                plano.txtObservacoes.setText(obj.getObservacoes());
                this.dispose();
            } else if (origem.equals("cartao")) {
                vendasCart.txtIdPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 0).toString());
                vendasCart.txtPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 1).toString());
                double taxa = Double.parseDouble(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 3).toString().replace(".", "").replace(",", "."));
                vendasCart.txtTaxa.setText(String.valueOf(decimal.format(taxa)));
                vendasCart.txtValorVenda.requestFocus();
                vendasCart.txtValorVenda.selectAll();
                this.dispose();
            } else if (origem.equals("contasReceber")) {
                contasReceber.txtIdPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 0).toString());
                contasReceber.txtPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 1).toString());
                contasReceber.txtValorVenda.requestFocus();
                contasReceber.txtValorVenda.selectAll();
                this.dispose();
            } else if (origem.equals("contasRecLiq")) {
                contasRecLiq.txtIdPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 0).toString());
                contasRecLiq.txtPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 1).toString());
                contasRecLiq.txtValorVenda.requestFocus();
                contasRecLiq.txtValorVenda.selectAll();
                this.dispose();
            } else if (origem.equals("contasReceberBaixar")) {
                contasReceberBaixar.txtIdPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 0).toString());
                contasReceberBaixar.txtPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 1).toString());
                contasReceberBaixar.txtTipo.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 2).toString());
                double taxa = Double.parseDouble(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 3).toString().replace(".", "").replace(",", "."));
                contasReceberBaixar.taxa = taxa;
                String tipo = tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 2).toString();
                if (tipo.equals("Crédito")) {
                    contasReceberBaixar.txtQuantidade.setEnabled(true);
                    contasReceberBaixar.txtQuantidade.requestFocus();
                    contasReceberBaixar.txtQuantidade.selectAll();
                } else {
                    contasReceberBaixar.txtQuantidade.setEnabled(false);
                }
                this.dispose();
            } else if (origem.equals("contasPagarLiq")) {
                contasPagarLiq.txtIdPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 0).toString());
                contasPagarLiq.txtPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 1).toString());
                contasPagarLiq.txtValorCompra.requestFocus();
                contasPagarLiq.txtValorCompra.selectAll();
                this.dispose();
            } else if (origem.equals("contasPagar")) {
                contasPagar.txtIdPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 0).toString());
                contasPagar.txtPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 1).toString());
                contasPagar.txtValorCompra.requestFocus();
                contasPagar.txtValorCompra.selectAll();
                this.dispose();
            } else if (origem.equals("contasPagarBaixar")) {
                contasPagarBaixar.txtIdPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 0).toString());
                contasPagarBaixar.txtPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 1).toString());
                contasPagarBaixar.txtTipo.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 2).toString());
                this.dispose();
            } else if (origem.equals("vendasBaixar")) {
                vendasBaixar.txtIdPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 0).toString());
                vendasBaixar.txtPlano.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 1).toString());
                vendasBaixar.txtTipo.setText(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 2).toString());
                double taxa = Double.parseDouble(tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 3).toString().replace(".", "").replace(",", "."));
                vendasBaixar.taxa = taxa;

                String tipo = tb_Planos.getValueAt(tb_Planos.getSelectedRow(), 2).toString();
                if (tipo.equals("Crédito")) {
                    vendasBaixar.txtQuantidade.setEnabled(true);
                    vendasBaixar.txtQuantidade.requestFocus();
                    vendasBaixar.txtQuantidade.selectAll();

                } else {
                    vendasBaixar.txtQuantidade.setEnabled(false);
                    vendasBaixar.txtQuantidade.setText("1");
                }
                this.dispose();
            }
        }

    }//GEN-LAST:event_btnOkActionPerformed

    private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String nome = txtNome.getText();

            if (nome.equals("")) {
                DefaultTableModel dados = (DefaultTableModel) tb_Planos.getModel();
                dados.setNumRows(0);

                PlanosDao dao = new PlanosDao();
                List<Planos> lista = dao.listarPlanos();

                for (Planos p : lista) {
                    String porcentagem = String.valueOf(decimal.format(p.getPorcentagem()));
                    dados.addRow(new Object[]{
                        p.getId(),
                        p.getNome(),
                        p.getTipo(),
                        porcentagem
                    });
                }
            } else {
                nome = nome + "%";

                DefaultTableModel dados = (DefaultTableModel) tb_Planos.getModel();
                dados.setNumRows(0);

                PlanosDao dao = new PlanosDao();
                List<Planos> lista = dao.consultarPorNome(nome);

                for (Planos p : lista) {
                    String porcentagem = String.valueOf(decimal.format(p.getPorcentagem()));
                    dados.addRow(new Object[]{
                        p.getId(),
                        p.getNome(),
                        p.getTipo(),
                        porcentagem
                    });
                }
            }
        }
    }//GEN-LAST:event_txtNomeKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPlanosFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPlanosFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPlanosFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPlanosFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPlanosFiltro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tb_Planos;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
